name: React CI/CD

on:
  push:
    branches: [ "develop","main" ]
  pull_request:
    branches: [ "develop","main" ]

env:
  S3_BUCKET: my-react-example-app-front-static
  CF_DISTRIBUITION: E32GJBPX3N4Z32
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: 'sa-east-1'
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}

      - name: Install
        run: npm ci  

      - name: Test
        run: npm test -- --watchAll=false

      - name: Dependency Check
        run: npm audit || true 
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Restore node_modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}

      - name: React build 
        run: npm run build

      - name: Upload files to S3
        run: |
          export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws s3 sync build/ s3://${{ env.S3_BUCKET }} --delete 
          
      - name: Clear Cloudfront cache
        run: aws cloudfront create-invalidation --distribution-id ${{ env.CF_DISTRIBUITION }} --paths "/*" "/*/*" "/*/*/*" "/*/*/*/*" "/*/*/*/*/*"
